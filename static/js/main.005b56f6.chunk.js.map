{"version":3,"sources":["context/CartContext.js","components/CardWidget/CardWidget.js","assets/img/logo.svg","components/NavBar/NavBar.js","components/Item/Item.js","components/ItemList/ItemList.js","firebase/firebaseConfig.js","components/ItemListCotainer/ItemsListsContiner.js","assets/img/home.jpg","components/Home/Home.js","components/ItemCount/ItemCount.js","components/ItemDetail/ItemDetail.js","components/ItemDetailContainer/ItemDetailContainer.js","components/CartItem/CartItem.js","components/Cart/Cart.js","components/Error/Error.js","App.js","resource/theme/index.js","index.js"],"names":["CartConetext","createContext","CartProvider","children","useState","cartItems","setCart","isInCart","itemId","find","item","id","updateItem","quantity","updatedCart","map","Provider","value","addItem","brand","img","weight","price","precie","removeItem","filter","clearCart","getTotalItems","reduce","total","getTotalPrice","CardWidget","useContext","className","to","variant","colorScheme","as","BsCart3","w","h","color","NavBar","src","logo","alt","Item","props","product","country","region","borderWidth","borderRadius","overflow","fontSize","mt","ItemList","products","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","ItemsListsContiner","title","styleRender","setProducts","category","useParams","isLoading","setIsLoading","getAllProducts","a","response","query","collection","items","getDocs","forEach","doc","push","data","getProductsCategory","where","getProductsTop5","limit","useEffect","setTimeout","size","thickness","Home","bg","bgImage","bgRepeat","bgSize","direction","alignItems","base","md","justify","p","textTransform","textAlign","fontWeight","letterSpacing","isTruncated","marginTop","flexDir","alignContent","position","top","left","spacing","rightIcon","ItemCount","stock","initial","onAdd","React","amount","setAmount","aria-label","onClick","icon","leftIcon","disabled","ItemDetail","msj","setMsj","isBuyButton","setIssBuyButton","description","boxSize","objectFit","type","status","ItemDetailContainer","setProduct","getItem","documentId","pt","CartItem","cartItem","maxW","display","maxH","lineHeight","initialState","name","phone","email","emailConfirm","msjInitial","Cart","statusCart","setStatusCart","values","setValues","isError","setIsError","onChangeHandler","e","target","toLowerCase","onSubmitHandler","preventDefault","order","buyer","console","log","addDoc","docRef","satuts","length","align","justifyContent","padding","pb","onSubmit","isRequired","htmlFor","placeholder","onChange","isInvalid","flexDirection","height","mr","mb","Error","maxWidth","App","basename","path","element","theme","extendTheme","colors","marron","900","800","700","600","500","400","300","200","fonts","body","components","Button","baseStyle","backgroundColor","_hover","borderColor","border","Spinner","speed","emptyColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.005b56f6.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\n\nexport const CartConetext = createContext([]);\n\nexport const CartProvider = ({ children }) => {\n  const [cartItems, setCart] = useState([]);\n\n  const addItem = (item, quantity) => {\n\n    if (isInCart(item.id)) {\n      updateItem(item.id, quantity);\n    } else {\n      setCart(\n        [...cartItems, {\n          id: item.id,\n          brand: item.brand,\n          img: item.img,\n          weight: item.weight,\n          price: item.precie,\n          quantity\n        }]\n      )\n    }\n  }\n\n  const removeItem = (itemId) => {\n    return setCart(\n      cartItems.filter(item => item.id !== itemId)\n    )\n\n  }\n\n  const clearCart = () => {\n    setCart([]);\n  }\n\n  const isInCart = (itemId) => {\n\n    return cartItems.find(item => item.id === itemId) ? true : false\n  }\n\n  const getTotalItems = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0)\n  }\n\n  const updateItem = (itemId, quantity) => {\n    const updatedCart = cartItems.map(item => {\n      if (item.id === itemId) {\n        item.quantity += quantity\n      }\n      return item\n    })\n    setCart(updatedCart)\n  }\n\n  const getTotalPrice = () => {\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0)\n  }\n\n  return (\n    <CartConetext.Provider value={\n      {\n        cartItems,\n        setCart,\n        addItem,\n        removeItem,\n        clearCart,\n        isInCart,\n        getTotalItems,\n        getTotalPrice\n      }\n    }>\n      {children}\n    </CartConetext.Provider>\n  )\n};","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { CartConetext } from '../../context/CartContext';\n\nimport { BsCart3 } from \"react-icons/bs\";\nimport { Icon } from '@chakra-ui/react';\nimport { Badge } from '@chakra-ui/react'\n\nimport './CardWidget.css';\n\nconst CardWidget = () => {\n\n  const { getTotalItems } = useContext(CartConetext);\n\n  return (\n    <div className=\"card-widget\">\n      <Link to='/cart'>\n        {(getTotalItems() > 0) &&\n          <Badge variant='solid' colorScheme='green'>{getTotalItems()}</Badge>}\n        <Icon as={BsCart3} w={6} h={6} color='marron.200' />\n      </Link>\n    </div>\n  );\n}\n\nexport default CardWidget;","export default __webpack_public_path__ + \"static/media/logo.4ceed3de.svg\";","import React from 'react';\nimport CardWidget from '../CardWidget/CardWidget';\nimport { Link } from 'react-router-dom';\n// Logo\nimport logo from '../../assets/img/logo.svg'\n// Estilos\nimport './NavBar.css'\nconst NavBar = () => {\n  return (\n    <nav className='navbar'>\n      <Link to=\"/\" className=\"navbar-link\">\n        <img className='navbar-logo' src={logo} alt='Logo de la tienada drink coffe' /></Link>\n      {/* Menu */}\n      <ul className='ul-navbar'>\n        <li><Link to=\"/\">Home</Link></li>\n        <li><Link to=\"/products\">Productos</Link></li>\n        <li><Link to=\"/category/Grano\">Grano</Link></li>\n        <li><Link to=\"/category/Molido\">Molido</Link></li>\n      </ul>\n      {/* Iciono carrito*/}\n      <CardWidget />\n    </nav>\n  )\n}\n\nexport default NavBar;","import React from 'react';\nimport { Link } from 'react-router-dom';\n// chakra-ui \nimport { Button, Box, Divider, Text } from '@chakra-ui/react'\n// Estilos\nimport './Item.css'\n\nconst Item = (props) => {\n  const { id, brand, country, region, img, precie } = props.product;\n\n  return (\n    <Box className=\"card\" id={id} borderWidth='1px' borderRadius='lg' overflow='hidden'>\n      <div className=\"card-image\">\n        <img src={img} alt=\"\" />\n      </div>\n      <Divider />\n      <div className=\"card-texts\">\n        <Text fontSize='lg' as='i'>{brand}</Text>\n        <Text fontSize='md' as='i'>{`${country} - ${region}`}</Text>\n        <Text fontSize='xl'>{`$ ${precie}`}</Text>\n        <Link to={`/item/${id}`} >\n          <Button colorScheme='brand' mt='6' >\n            Ver Producto\n          </Button>\n        </Link>\n      </div>\n    </Box>\n  );\n}\n\nexport default Item;","import React from 'react';\nimport Item from '../Item/Item';\nimport './ItemList.css';\n\nconst ItemList = ({ products }) => {\n  return (\n    <div className='container-card'>\n      {products.map(product => {\n        return <Item key={product.id} product={product} />\n      })}\n    </div>\n  );\n}\n\nexport default ItemList;","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from 'firebase/firestore';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID\n}\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\nexport default db;\n","import React, { useEffect, useState } from 'react';\n// Componnentes Propios\nimport ItemList from '../ItemList/ItemList';\n// React-Router\nimport { useParams } from 'react-router';\n// Chakra-ui\nimport { Spinner } from '@chakra-ui/react';\n// FIREBASE\nimport db from '../../firebase/firebaseConfig'\nimport { collection, query, where, getDocs, limit } from 'firebase/firestore';\n// Estilos\nimport './ItemsListsContiner.css';\n\n\nconst ItemsListsContiner = ({ title, styleRender }) => {\n\n  // Estados\n  const [products, setProducts] = useState([]);\n  const { category } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Metodo para obtener los productos\n  const getAllProducts = async () => {\n    const response = query(collection(db, 'products'));\n    const items = [];\n    const querySnapshot = await getDocs(response);\n    querySnapshot.forEach((doc) => {\n      items.push({ ...doc.data(), id: doc.id });\n    });\n    setProducts(items);\n  };\n\n  // Metodo para obtener los productos por categoria\n  const getProductsCategory = async (category) => {\n    const response = query(\n      collection(db, 'products'),\n      where('category', '==', category)\n    );\n    const items = [];\n    const querySnapshot = await getDocs(response);\n    querySnapshot.forEach((doc) => {\n      items.push({ ...doc.data(), id: doc.id });\n    });\n    setProducts(items);\n  };\n  // Metodo para obtener top 5 de productos \n  const getProductsTop5 = async (category) => {\n    const response = query(collection(db, 'products'), limit(3));\n    const items = [];\n    const querySnapshot = await getDocs(response);\n    querySnapshot.forEach((doc) => {\n      items.push({ ...doc.data(), id: doc.id });\n    });\n    setProducts(items);\n  };\n\n  // UseEffect para obtener los productos\n  useEffect(() => {\n    setIsLoading(true);\n    if (styleRender === 'top') {\n      getProductsTop5()\n    } else if (styleRender === 'category') {\n      getProductsCategory(category);\n    } else if (styleRender === 'all') {\n      getAllProducts();\n    }\n    setTimeout(() => { setIsLoading(false); }, 2000)\n\n  }, [styleRender, category]);\n\n\n  return (\n    <section className='secction-items-lists'>\n      <div className=\"container\">\n        <h2 className='h2-items-lists' >{title} {category}</h2>\n        {isLoading\n          ? <Spinner size='xl' thickness='4px' mt='40px' />\n          : <ItemList products={products} />}\n      </div>\n    </section>\n  );\n}\n\nexport default ItemsListsContiner;","export default __webpack_public_path__ + \"static/media/home.7be8f2b2.jpg\";","import { Box, Flex, Heading, Text, Button, Stack, Center } from '@chakra-ui/react';\nimport React from 'react';\nimport ItemsListsContiner from '../ItemListCotainer/ItemsListsContiner';\nimport './Home.css';\nimport bgImage from '../../assets/img/home.jpg';\nimport { GiCoffeeBeans } from \"react-icons/gi\";\nimport { Link } from 'react-router-dom';\nconst Home = ({ title }) => {\n\n\n  return (\n    <Box h=\"100vh\"\n      bg=\"marron.200\"\n      bgImage={`url(${bgImage})`}\n      bgRepeat='no-repeat'\n      bgSize=\"cover\" >\n\n      <Flex\n        direction='column'\n        alignItems={{ base: 'center', md: 'flex-start' }}\n        justify=\"center\"\n        h=\"100%\"\n        bg=\"rgba(0,0,0,0.7)\"\n        p={['0 10%', null, '0 10%']}\n      >\n\n        <Heading\n          color=\"marron.900\"\n          textTransform=\"uppercase\"\n          textAlign=\"left\"\n          fontWeight=\"bold\"\n          letterSpacing=\"2px\"\n          as='h1'\n          size='4xl'\n          isTruncated >\n\n          {title}\n        </Heading>\n\n        <Flex\n          w=\"50%\"\n          marginTop=\"2rem\"\n        >\n          <Text\n            color=\"marron.200\"\n            fontSize='l'\n            fontWeight=\"light\"\n            letterSpacing=\"1px\"\n            textAlign=\"justify\"\n          >\n            Invertimos en conocimiento e innovación, creamos relaciones de beneficio mutuo con los productores de café (Comercio Directo), intentamos y controlamos obsesivamente cada grano de café, tostamos con arte modelando curvas de tueste ideales para cada café (Tostado Artesano).\n          </Text>\n        </Flex>\n\n      </Flex>\n\n      <ItemsListsContiner title=\"Algunos de Nuestros Productos\" styleRender=\"top\" />\n      <Flex flexDir='column' alignContent='center' position='absolute' top='2000px' left='45vw'>\n        <Center >\n          <Stack direction='row' spacing={4} size='xl'>\n            <Link to=\"/products\">\n              <Button rightIcon={<GiCoffeeBeans />} colorScheme='marron' variant='outline' size='lg'>\n                Ver más Productos\n              </Button>\n            </Link>\n          </Stack>\n        </Center>\n      </Flex>\n\n    </Box>\n  )\n}\n\nexport default Home;","import React from 'react';\nimport { Button } from '@chakra-ui/react';\nimport { BsCartPlus } from \"react-icons/bs\";\nimport { IconButton, Text } from '@chakra-ui/react'\nimport { IoIosRemoveCircleOutline, IoIosAddCircleOutline } from \"react-icons/io\"\nconst ItemCount = ({ stock, initial, onAdd }) => {\n\n  // State initialization\n  const [amount, setAmount] = React.useState(initial);\n\n  // //  Listen to the changes in the input\n  // const handleChange = (e) => {\n  //   const valueInputCant = e.target.value;\n  //   if (valueInputCant <= stock && valueInputCant >= 0) {\n  //     setAmount(valueInputCant);\n  //   }\n  //   e.target.value = amount;\n  // }\n\n  // To decrement the number of selected products\n  const HandleDecrease = () => {\n    if (amount > 0) {\n      setAmount(amount - 1);\n    }\n  }\n  // To increase the number of selected products\n  const HandleIncrease = () => {\n    if (amount < stock) {\n      setAmount(amount + 1);\n    }\n  }\n  // Button ADD product\n  const HandlerAdd = () => {\n    onAdd(amount)\n  }\n\n  return (\n    <div className=\"card-add\">\n      <div className=\"item-count-container\">\n\n        <IconButton aria-label='Search database' color=\"marron.900\" bg=\"marron.200\" onClick={HandleDecrease} icon={<IoIosRemoveCircleOutline />} />\n        {/* <input type=\"number\" value={amount} onChange={handleChange} /> */}\n        <Text fontSize='30px' as='p' color='marron.900'>{amount}</Text>\n        <IconButton aria-label='Search database' color=\"marron.900\" bg=\"marron.200\" onClick={HandleIncrease} icon={<IoIosAddCircleOutline />} />\n\n      </div>\n\n      <Button colorScheme='brand' leftIcon={<BsCartPlus />} variant='solid' onClick={stock > 0 ? HandlerAdd : null} disabled={stock > 0 ? false : true} >\n        Agregar al Carrito\n      </Button>\n\n    </div>\n  );\n}\n\nexport default ItemCount;","import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ItemCount from \"../ItemCount/ItemCount\";\nimport { Button, Alert, AlertIcon, Stack, Image } from \"@chakra-ui/react\";\nimport \"./ItemDetail.css\";\nimport { CartConetext } from \"../../context/CartContext\";\n\nconst ItemDetail = ({ product }) => {\n\n  const { addItem } = useContext(CartConetext);\n  const [msj, setMsj] = useState({});\n  const [isBuyButton, setIssBuyButton] = useState(true);\n  const {\n    brand,\n    category,\n    country,\n    region,\n    description,\n    img,\n    precie,\n    stock,\n    weight,\n  } = product;\n\n\n  const onAdd = (amount) => {\n    if (amount > 0) {\n      addItem(product, amount);\n      setIssBuyButton(false);\n      setMsj({\n        description: `Usted a seleccionado ${amount}`,\n        type: \"success\",\n      });\n\n    } else {\n      setMsj({\n        description: \"Tiene que seleccionar una cantidad\",\n        type: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div className=\"product-detail\">\n      <div className=\"product-container\">\n        <div className=\"img-container\">\n          <Image boxSize=\"300px\" objectFit=\"cover\" src={img} alt=\"\" />\n        </div>\n        <div className=\"product-detail-info\">\n          <h3>{brand}</h3>\n          <span>Categoria: {category}</span>\n          <span>Pais: {country}</span>\n          <span>Region: {region}</span>\n          <p>{description}</p>\n          <span>Peso: {weight}g</span>\n          <span>Precio: ${precie}</span>\n          <span>Stock: {stock}</span>\n          {isBuyButton ? (\n            <ItemCount stock={stock} initial={1} onAdd={onAdd} />\n          ) : (\n            <>\n              <Link to={`/cart`}>\n                <Button colorScheme=\"brand\" variant=\"solid\">\n                  Finalizar Comprar\n                </Button>\n              </Link>\n              <Link to={`/products`}>\n                <Button colorScheme=\"brand\" variant=\"solid\">\n                  Seguir Comprando\n                </Button>\n              </Link>\n            </>\n          )}\n          {msj.description ? (\n            <Stack spacing={3}>\n              <Alert status={msj.type}>\n                <AlertIcon />\n                {msj.description}\n              </Alert>\n            </Stack>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ItemDetail;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport ItemDetail from \"../ItemDetail/ItemDetail\";\nimport { Spinner } from \"@chakra-ui/react\";\n// FIREBASE\nimport db from \"../../firebase/firebaseConfig\";\nimport {\n  collection,\n  query,\n  getDocs,\n  where,\n  documentId,\n} from \"firebase/firestore\";\n\nconst ItemDetailContainer = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [product, setProduct] = useState([]);\n  const { id } = useParams();\n\n  const getItem = async (id) => {\n    const response = query(\n      collection(db, \"products\"),\n      where(documentId(), \"==\", id)\n    );\n    const items = [];\n    const querySnapshot = await getDocs(response);\n    querySnapshot.forEach((doc) => {\n      items.push({ ...doc.data(), id: doc.id });\n    });\n    setProduct(items[0]);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getItem(id);\n  }, [id]);\n\n  return (\n    <div className=\"container-prorduct-detail\">\n      {isLoading ? (\n        <Spinner size=\"xl\" thickness=\"4px\" pt='40px' />\n      ) : (\n        <ItemDetail product={product} />\n      )}\n    </div>\n  );\n};\n\nexport default ItemDetailContainer;\n","import React from \"react\";\nimport { Box, Image, Button, Text } from \"@chakra-ui/react\";\n\nconst CartItem = ({ cartItem, removeItem }) => {\n  return (\n    <Box\n      maxW=\"100%\"\n      borderWidth=\"1px\"\n      borderRadius=\"m\"\n      display=\"flex\"\n      flexDir=\"row\"\n      alignContent=\"stretch\"\n    >\n      <Box>\n        <Image maxH=\"200px\" src={cartItem.img} />\n      </Box>\n      <Box pt=\"6\">\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {cartItem.brand}\n        </Box>\n        <Box>\n          <Text as='em'>{cartItem.weight} g</Text>\n        </Box>\n        <Box pt=\"2\">\n          {cartItem.price}\n          <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n            {` x ${cartItem.quantity}`}\n          </Box>\n        </Box>\n        <Box pt=\"6\">\n          <Button colorScheme=\"red\" onClick={() => removeItem(cartItem.id)}>\n            Quitar\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\nexport default CartItem;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport CartItem from \"../CartItem/CartItem\";\nimport { CartConetext } from \"../../context/CartContext\";\nimport {\n  Button,\n  Flex,\n  Box,\n  Alert,\n  AlertIcon,\n  Text,\n  FormControl,\n  FormLabel,\n  Input,\n  AlertTitle,\n  FormErrorMessage,\n  Stack,\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport db from \"../../firebase/firebaseConfig\";\n\nconst initialState = {\n  name: \"\",\n  phone: \"\",\n  email: \"\",\n  emailConfirm: \"\",\n};\nlet msjInitial = {\n  status: \"warning\",\n  title: \"Usted no tiene ningun producto agregado.\",\n};\n\nconst Cart = () => {\n  const [statusCart, setStatusCart] = useState(false);\n  const [values, setValues] = useState(initialState);\n  const [msj, setMsj] = useState(msjInitial);\n  const [isError, setIsError] = useState(false)\n  const { cartItems, clearCart, removeItem, getTotalPrice } =\n    useContext(CartConetext);\n\n  const onChangeHandler = (e) => {\n    let { name, value } = e.target;\n    if (name === 'email' || name === 'emailConfirm') {\n      value = value.toLowerCase();\n    }\n    setValues({ ...values, [name]: value });\n  };\n\n  const onSubmitHandler = async (e) => {\n    e.preventDefault();\n    if (values.email !== values.emailConfirm) {\n      setIsError(true);\n    } else {\n      e.preventDefault();\n      setIsError(false);\n      const order = {};\n      order.buyer = values;\n      order.total = getTotalPrice();\n      order.items = cartItems.map((cartItem) => {\n        const id = cartItem.id;\n        const name = cartItem.brand;\n        const price = cartItem.price;\n        const quantity = cartItem.quantity;\n        return { id, name, price, quantity };\n      });\n      console.log(order);\n      const docRef = await addDoc(collection(db, \"buyer\"), {\n        order,\n      });\n      setMsj({ satuts: \"success\", title: `Su id de producto es ${docRef.id}` });\n      setValues(initialState);\n      clearCart();\n    }\n\n  };\n\n\n  useEffect(() => {\n    if (cartItems.length === 0) {\n      setStatusCart(false);\n    } else {\n      setStatusCart(true);\n    }\n  }, [cartItems.length, setStatusCart]);\n\n\n  return (\n    <Flex flexDir=\"row\" justify=\"space-between\" align=\"left\" mt=\"10%\">\n      {statusCart ? (\n        <>\n          <Box w=\"50vw\" h=\"100vh\">\n            {cartItems.map((cartItem) => (\n              <CartItem\n                key={cartItem.id}\n                cartItem={cartItem}\n                removeItem={removeItem}\n              />\n            ))}\n          </Box>\n          <Box\n            w=\"50vw\"\n            h=\"100vh\"\n            color=\"balck\"\n          >\n            <Box display='flex' flexDir='row' justifyContent='space-between' padding='2rem 2rem' bg='gray.200'>\n              <Text fontSize=\"xl\" >Totol Compra:</Text>\n              <Text fontSize=\"xl\" as='em'> ${getTotalPrice()}</Text>\n\n            </Box>\n            <Box w='100%' display='flex' flexDir='column' padding='1rem 2rem' mt='1rem'>\n              <Text fontSize=\"xl\" as='h2' pb='1rem'>Formulario de Compra</Text>\n\n              <form onSubmit={onSubmitHandler} w='100%'>\n\n                <FormControl w='100%' isRequired >\n                  <FormLabel htmlFor=\"name\">Nombre</FormLabel>\n                  <Input\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Nombre\"\n                    value={values.name}\n                    onChange={onChangeHandler}\n                  />\n                </FormControl>\n                <FormControl isRequired>\n                  <FormLabel htmlFor=\"phone\">Telefono</FormLabel>\n                  <Input\n                    name=\"phone\"\n                    type=\"number\"\n                    placeholder=\"3624213312\"\n                    value={values.phone}\n                    onChange={onChangeHandler}\n                  />\n                </FormControl>\n                <FormControl isRequired>\n                  <FormLabel htmlFor=\"email\">E-mail</FormLabel>\n                  <Input\n                    name=\"email\"\n                    type=\"mail\"\n                    placeholder=\"email@email.com\"\n                    value={values.email}\n                    onChange={onChangeHandler}\n                  />\n                </FormControl>\n                <FormControl isRequired isInvalid={isError}>\n                  <FormLabel htmlFor=\"emailConfirm\">Confirmacion de Email</FormLabel>\n                  <Input\n                    name=\"emailConfirm\"\n                    type=\"email\"\n                    placeholder=\"email@email.com\"\n                    value={values.emailConfirm}\n                    onChange={onChangeHandler}\n                  />\n                  {isError &&\n                    <FormErrorMessage>El email no coidice</FormErrorMessage>}\n                </FormControl>\n                <Stack direction='row' spacing={4} mt='2rem'>\n                  <Button type=\"submit\" colorScheme='teal'>\n                    Comprar\n                  </Button>\n                  <Button onClick={() => clearCart()} colorScheme='red' variant='solid'>Limpiar Carrito</Button>\n                </Stack>\n              </form>\n            </Box>\n          </Box>\n        </>\n      ) : (\n        <Alert\n          status={msj.status}\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          textAlign=\"center\"\n          height=\"200px \"\n        >\n          <AlertIcon boxSize=\"40px\" mr={0} />\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n            {msj.title}\n          </AlertTitle>\n          <Link to=\"/products\">\n            <Button colorScheme=\"brand\" variant=\"solid\">\n              Elegir Productos\n            </Button>\n          </Link>\n        </Alert>\n      )\n      }\n    </Flex >\n  );\n};\n\nexport default Cart;\n","import React from 'react';\nimport {\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n} from '@chakra-ui/react'\n\nfunction Error() {\n  return (\n    <Alert\n      status='error'\n      variant='subtle'\n      flexDirection='column'\n      alignItems='center'\n      justifyContent='center'\n      textAlign='center'\n      height='100vh'\n    >\n      <AlertIcon boxSize='40px' mr={0} />\n      <AlertTitle mt={4} mb={1} fontSize='lg'>\n        Error 404\n      </AlertTitle>\n      <AlertDescription maxWidth='sm'>\n        We're sorry we can't show the page\n      </AlertDescription>\n    </Alert>\n  )\n}\n\nexport default Error\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n// Componentes propios\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Home from \"./components/Home/Home\";\nimport ItemsListsContiner from \"./components/ItemListCotainer/ItemsListsContiner\";\nimport ItemDetailContainer from \"./components/ItemDetailContainer/ItemDetailContainer\";\nimport Cart from \"./components/Cart/Cart\";\nimport Error from \"./components/Error/Error\";\n\nimport { CartProvider } from \"./context/CartContext\";\nconst App = () => {\n  return (\n    <>\n      <CartProvider>\n        <BrowserRouter basename={process.env.PUBLIC_URL  + '/'}>\n          <NavBar />\n          <Routes >\n            <Route path=\"/\" element={<Home title=\"DRINK COFFEE\" />} />\n            <Route\n              path=\"/products\"\n              element={<ItemsListsContiner title=\"PRODUCTOS\" styleRender=\"all\" />}\n            />\n            <Route\n              path=\"/category/:category\"\n              element={<ItemsListsContiner title=\"CAFEE ESTILO\" styleRender=\"category\" />}\n            />\n            <Route path=\"/item/:id\" element={<ItemDetailContainer />} />\n            <Route path=\"/cart\" element={<Cart />} />\n            <Route path=\"*\" element={<Error />} />\n          </Routes>\n        </BrowserRouter>\n      </CartProvider>\n    </>\n  );\n};\n\nexport default App;\n","// 1. Import the extendTheme function\nimport { extendTheme } from '@chakra-ui/react'\n\n// 2. Extend the theme to include custom colors, fonts, etc\nconst colors = {\n  marron: {\n    900: '#bc9667',\n    800: '#C4A37A',\n    700: '#CDB08D',\n    600: '#D5BDA0',\n    500: '#DECBB3',\n    400: '#E6D8C6',\n    300: '#EEE5D9',\n    200: '#ffffff',\n  },\n}\nconst Button = {\n  baseStyle: {\n    backgroundColor: 'marron.900',\n    fontSize: '1.2rem',\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n    _hover: {\n      backgroundColor: 'transparent',\n      color: 'marron.900',\n      borderColor: 'marron.900',\n      border: '1px solid',\n    }\n  }\n}\n\nconst Spinner = {\n  baseStyle: {\n    speed: '0.65s',\n    emptyColor: 'gray.200',\n    color: 'marron.900',\n  }\n}\nconst fonts = {\n  body: 'Nunito Sans, sans- serif',\n\n}\nexport const theme = extendTheme({ colors, fonts, components: { Button, Spinner } })\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { ChakraProvider } from '@chakra-ui/react'\nimport { theme } from './resource/theme'\nimport './index.css';\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ChakraProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}